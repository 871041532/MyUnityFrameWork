---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by qqqqq.
--- DateTime: 2020/5/17 13:22
---

local View = class("View")

function View:ctor(trans)
    self.transform = trans
    self.gameObject = trans.gameObject
    self.__children = nil
    self.__assetCache = nil
    self.__externalCache = nil
end

--------------- 下面是public方法 -------------------------
function View:Init()
    self:_OnInit()
end

function View:Destroy()
    if self.__children then
        for _, v in ipairs(self.__children) do
            v:Destroy()
        end
        self.__children = nil
    end
    if self.__assetCache then
        self.__assetCache:Destroy()
    end
    self.__externalCache = nil
    self:_OnDestroy()
end

function View:CreateUI(trans, ViewClass)
    local cls = ViewClass or View
    local children = self:GetChildren()
    local child = cls.New(trans)
    child:Init()
    if child:GetCacheType() == Enum.ViewCacheType.Root then
        child:SetExternalCache(self:GetChache())
    end
    table.insert(children, child)
    return child
end

function View:CreateUIByPath(path, ViewClass)
    local cls = ViewClass or View
    local assetItem = self:GetChache():Load(path)
    local trans = GameObject.Instantiate(assetItem.GameObject, self.transform).transform
    return self:CreateUI(trans, cls)
end

function View:GetChache()
    if self.__externalCache then
        return self.__externalCache
    end
    if not self.__assetCache then
        self.__assetCache = CS.ResourceCache()
    end
    return self.__assetCache
end

function View:SetExternalCache(cache)
    self.__externalCache = cache
end

function View:GetChildren()
    if not self.__children then
        self.__children = {}
    end
    return self.__children
end

function View:GetCacheType()
    return self:_OnGetCacheType()
end

-------- 下面是虚方法 --------------------------
function View:_OnInit()

end

function View:_OnDestroy()

end

function View:_OnGetCacheType()
    return Enum.ViewCacheType.Root
end

return View