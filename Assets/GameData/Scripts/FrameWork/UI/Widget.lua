---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by qqqqq.
--- DateTime: 2020/5/17 13:22
---

local Widget = class("Widget")

function Widget:ctor(trans)
    self.transform = trans
    self.gameObject = trans.gameObject
    self.__children = nil
    self.__assetCache = nil
    self.__externalCache = nil
end

--------------- 下面是public方法 -------------------------
function Widget:Init()
    self:_OnInit()
end

function Widget:Destroy()
    if self.__children then
        for _, v in ipairs(self.__children) do
            v:Destroy()
        end
        self.__children = nil
    end
    if self.__assetCache then
        self.__assetCache:Destroy()
    end
    self.__externalCache = nil
    self:_OnDestroy()
end

function Widget:CreateUI(trans, widgetClass)
    local cls = widgetClass or Widget
    local children = self:GetChildren()
    local child = cls.New(trans)
    child:Init()
    table.insert(children, child)
    return child
end

function Widget:CreateUIByPath(path, widgetClass)
    local cls = widgetClass or Widget
    local assetItem = self:GetChache():Load(path)
    local trans = GameObject.Instantiate(assetItem.GameObject, self.transform).transform
    return self:CreateUI(trans, cls)
end

function Widget:GetChache()
    if self.__externalCache then
        return self.__externalCache
    end
    if not self.__assetCache then
        self.__assetCache = CS.ResourceCache()
    end
    return self.__assetCache
end

function Widget:SetExternalCache(cache)
    self.__externalCache = cache
end

function Widget:GetChildren()
    if not self.__children then
        self.__children = {}
    end
    return self.__children
end

-------- 下面是虚方法 --------------------------
function Widget:_OnInit()

end

function Widget:_OnDestroy()

end

return Widget